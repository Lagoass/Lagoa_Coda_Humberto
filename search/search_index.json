{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#template-de-entrega","title":"Template de Entrega","text":"Edi\u00e7\u00e3o <p>2025.1</p>"},{"location":"#grupokit-x","title":"Grupo/Kit X","text":"<ol> <li>Jo\u00e3o da Silva</li> <li>Pedro de Souza</li> <li>Maria Oliveira</li> <li>Grupo K<ul> <li>Jo\u00e3o da Silva</li> <li>Pedro de Souza</li> </ul> </li> </ol> <p>Instru\u00e7\u00f5es</p> <p>Voc\u00eas devem utilizar este template como um bloco de notas para registrar o que foi feito e o que falta fazer. Voc\u00eas devem adicionar as informa\u00e7\u00f5es necess\u00e1rias. O template deve ser editado e atualizado a cada entrega, registrando assim a data de entrega e o que foi feito at\u00e9 o momento via Git.</p>"},{"location":"#entregas","title":"Entregas","text":"<ul> <li> Roteiro 1 - Data 24/10/2025</li> <li> Roteiro 2 - Data 24/10/2025</li> <li> Roteiro 3 - Data 24/10/2025</li> <li> Roteiro 4 - Data 24/10/2025</li> <li> Projeto - </li> </ul>"},{"location":"#diagramas","title":"Diagramas","text":"<p>Use o Mermaid para criar os diagramas de documenta\u00e7\u00e3o.</p> <p>Mermaid Live Editor</p> <pre><code>flowchart TD\n    Deployment:::orange --&gt;|defines| ReplicaSet\n    ReplicaSet --&gt;|manages| pod((Pod))\n    pod:::red --&gt;|runs| Container\n    Deployment --&gt;|scales| pod\n    Deployment --&gt;|updates| pod\n\n    Service:::orange --&gt;|exposes| pod\n\n    subgraph  \n        ConfigMap:::orange\n        Secret:::orange\n    end\n\n    ConfigMap --&gt; Deployment\n    Secret --&gt; Deployment\n    classDef red fill:#f55\n    classDef orange fill:#ffa500</code></pre>"},{"location":"#codigos","title":"C\u00f3digos","text":"De um arquivo remotoAnota\u00e7\u00f5es no c\u00f3digo main.yaml compose.yaml<pre><code>name: app\n\n    db:\n        image: postgres:17\n        environment:\n            POSTGRES_DB: ${POSTGRES_DB:-projeto} # (1)!\n            POSTGRES_USER: ${POSTGRES_USER:-projeto}\n            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-projeto}\n        ports:\n            - 5432:5432 #(2)!\n</code></pre> <ol> <li> <p>Caso a vari\u00e1vel de ambiente <code>POSTGRES_DB</code> n\u00e3o exista ou seja nula - n\u00e3o seja definida no arquivo <code>.env</code> - o valor padr\u00e3o ser\u00e1 <code>projeto</code>. Vide documenta\u00e7\u00e3o.</p> </li> <li> <p>Aqui \u00e9 feito um t\u00fanel da porta 5432 do container do banco de dados para a porta 5432 do host (no caso localhost). Em um ambiente de produ\u00e7\u00e3o, essa porta n\u00e3o deve ser exposta, pois ningu\u00e9m de fora do compose deveria acessar o banco de dados diretamente.</p> </li> </ol>"},{"location":"#exemplo-de-video","title":"Exemplo de v\u00eddeo","text":"<p>Lorem ipsum dolor sit amet</p>"},{"location":"#referencias","title":"Refer\u00eancias","text":"<p>Material for MkDocs</p>"},{"location":"account/main/","title":"1. Account API","text":""},{"location":"account/main/#modulo-de-contas-account-api","title":"\ud83d\uddc3\ufe0f M\u00f3dulo de Contas (Account API)","text":"<p>O servi\u00e7o Account API \u00e9 o pilar para o gerenciamento de contas de usu\u00e1rio dentro do dom\u00ednio de e-commerce (<code>store</code>).</p> <p>Este microsservi\u00e7o realiza todas as opera\u00e7\u00f5es CRUD (Criar, Ler, Atualizar, Excluir) essenciais para a gest\u00e3o de contas, estabelecendo a funda\u00e7\u00e3o necess\u00e1ria para a autentica\u00e7\u00e3o e o relacionamento com outros servi\u00e7os do ecossistema, como <code>auth</code>, <code>order</code> e <code>product</code>.</p> <ul> <li>Cria\u00e7\u00e3o (Cadastro)</li> <li>Busca (Consulta)</li> <li>Atualiza\u00e7\u00e3o</li> <li>Exclus\u00e3o</li> </ul> <p>\ud83d\udd12 Camada de Confian\u00e7a (Trusted Layer) e Roteamento Seguro</p> <p>Todas as comunica\u00e7\u00f5es externas passam obrigatoriamente pelo Gateway da aplica\u00e7\u00e3o. As rotas sob <code>/account/**</code> s\u00e3o protegidas por token, exigindo o envio do cabe\u00e7alho de autentica\u00e7\u00e3o: <code>Authorization: Bearer &lt;jwt&gt;</code>.</p>"},{"location":"account/main/#componentes-e-estrutura","title":"\ud83c\udfdb\ufe0f Componentes e Estrutura","text":"<p>A Account API \u00e9 dividida em dois subm\u00f3dulos principais, garantindo a separa\u00e7\u00e3o de responsabilidades:</p> M\u00f3dulo Responsabilidade Tecnologias Chave <code>account</code> Interface/Contrato - Define o contrato (DTOs e Interfaces Feign) que ser\u00e1 consumido por outros servi\u00e7os e aplica\u00e7\u00f5es front-end. DTOs, Feign <code>account-service</code> Implementa\u00e7\u00e3o Principal - Cont\u00e9m a l\u00f3gica de neg\u00f3cio, a camada REST, persist\u00eancia de dados e scripts de migra\u00e7\u00e3o de banco de dados. REST, JPA, Flyway <pre><code>flowchart TD\n    A[account: Contrato e DTOs] --&gt; B{account-service: L\u00f3gica de Neg\u00f3cio};\n    B --&gt; C[JPA: Persist\u00eancia];\n    B --&gt; D[Flyway: Migra\u00e7\u00f5es de DB];\n    E[Outros M\u00f3dulos] --&gt; A;\n    A -- Contrato (DTOs/Feign) --&gt; B;</code></pre>"},{"location":"account/main/#fluxo-de-comunicacao","title":"\ud83c\udf10 Fluxo de Comunica\u00e7\u00e3o","text":"<p>A comunica\u00e7\u00e3o com a API segue um fluxo de seguran\u00e7a e processamento em camadas:</p> <pre><code>graph TD\n    internet[\ud83c\udf0d Internet] --&gt; gateway{\ud83d\udee1\ufe0f Gateway};\n    gateway --&gt; accountService[\u2699\ufe0f account-service];\n    accountService --&gt; db[\ud83d\udcbe Database (JPA/Flyway)];</code></pre>"},{"location":"account/main/#modulo-de-contrato-account","title":"\ud83d\udcc2 M\u00f3dulo de Contrato (account)","text":"<p>Este m\u00f3dulo exp\u00f5e a interface e os Data Transfer Objects (DTOs) para os consumidores externos.</p> <pre><code>\ud83d\udcc1 api/\n\u2514\u2500\u2500 \ud83d\udcc1 account/\n    \u251c\u2500\u2500 \ud83d\udcc1 src/\n    \u2502   \u2514\u2500\u2500 \ud83d\udcc1 main/\n    \u2502       \u2514\u2500\u2500 \ud83d\udcc1 java/\n    \u2502           \u2514\u2500\u2500 \ud83d\udcc1 store/\n    \u2502               \u2514\u2500\u2500 \ud83d\udcc1 account/\n    \u2502                   \u251c\u2500\u2500 \ud83d\udcc4 AccountController.java\n    \u2502                   \u251c\u2500\u2500 \ud83d\udcc4 AccountIn.java\n    \u2502                   \u2514\u2500\u2500 \ud83d\udcc4 AccountOut.java\n    \u251c\u2500\u2500 \ud83d\udcc4 pom.xml\n    \u2514\u2500\u2500 \ud83d\udcc4 Jenkinsfile\n</code></pre> Source pom.xml pom.xml<pre><code>\n</code></pre> Jenkinsfile Jenkinsfile<pre><code>\n</code></pre> AccountController AccountController.java<pre><code>\n</code></pre> AccountIn AccountIn.java<pre><code>\n</code></pre> AccountOut AccountOut.java<pre><code>\n</code></pre> <pre><code>&gt; mvn clean install\n</code></pre>"},{"location":"account/main/#modulo-de-servico-account-service","title":"\u2699\ufe0f M\u00f3dulo de Servi\u00e7o (account-service)","text":"<p>Onde a l\u00f3gica de neg\u00f3cio e a persist\u00eancia de dados s\u00e3o implementadas.</p> <pre><code>\ud83d\udcc1 api/\n\u2514\u2500\u2500 \ud83d\udcc1 account-service/\n    \u251c\u2500\u2500 \ud83d\udcc1 k8s/\n    \u2502   \u2514\u2500\u2500 \ud83d\udcc4 k8s.yaml\n    \u251c\u2500\u2500 \ud83d\udcc1 src/\n    \u2502   \u2514\u2500\u2500 \ud83d\udcc1 main/\n    \u2502       \u251c\u2500\u2500 \ud83d\udcc1 java/\n    \u2502       \u2502   \u2514\u2500\u2500 \ud83d\udcc1 store/\n    \u2502       \u2502       \u2514\u2500\u2500 \ud83d\udcc1 account/\n    \u2502       \u2502           \u251c\u2500\u2500 \ud83d\udcc4 Account.java\n    \u2502       \u2502           \u251c\u2500\u2500 \ud83d\udcc4 AccountApplication.java\n    \u2502       \u2502           \u251c\u2500\u2500 \ud83d\udcc4 AccountModel.java\n    \u2502       \u2502           \u251c\u2500\u2500 \ud83d\udcc4 AccountParser.java\n    \u2502       \u2502           \u251c\u2500\u2500 \ud83d\udcc4 AccountRepository.java\n    \u2502       \u2502           \u251c\u2500\u2500 \ud83d\udcc4 AccountResource.java\n    \u2502       \u2502           \u2514\u2500\u2500 \ud83d\udcc4 AccountService.java\n    \u2502       \u2514\u2500\u2500 \ud83d\udcc1 resources/\n    \u2502           \u251c\u2500\u2500 \ud83d\udcc4 application.yaml\n    \u2502           \u2514\u2500\u2500 \ud83d\udcc1 db/\n    \u2502               \u2514\u2500\u2500 \ud83d\udcc1 migration/\n    \u2502                   \u251c\u2500\u2500 \ud83d\udcc4 V2025.08.29.001__create_schema.sql\n    \u2502                   \u251c\u2500\u2500 \ud83d\udcc4 V2025.08.29.002__create_table_account.sql\n    \u2502                   \u2514\u2500\u2500 \ud83d\udcc4 V2025.09.02.001__create_index_email.sql\n    \u251c\u2500\u2500 \ud83d\udcc4 pom.xml\n    \u251c\u2500\u2500 \ud83d\udcc4 Dockerfile\n    \u2514\u2500\u2500 \ud83d\udcc4 Jenkinsfile\n</code></pre> Source pom.xml pom.xml<pre><code>\n</code></pre> Dockerfile Dockerfile<pre><code>\n</code></pre> Jenkinsfile Jenkinsfile<pre><code>\n</code></pre> k8s.yaml k8s.yaml<pre><code>\n</code></pre> application.yaml application.yaml<pre><code>\n</code></pre> Account.java Account.java<pre><code>\n</code></pre> AccountApplication.java AccountApplication.java<pre><code>\n</code></pre> AccountModel.java AccountModel.java<pre><code>\n</code></pre> AccountParser.java AccountParser.java<pre><code>\n</code></pre> AccountRepository.java AccountRepository.java<pre><code>\n</code></pre> AccountResource.java AccountResource.java<pre><code>\n</code></pre> AccountService.java AccountService.java<pre><code>\n</code></pre> V2025.08.29.001__create_schema.sql V2025.08.29.001__create_schema.sql<pre><code>\n</code></pre> V2025.08.29.002__create_table_account.sql V2025.08.29.002__create_table_account.sql<pre><code>\n</code></pre> V2025.09.02.001__create_index_email.sql V2025.09.02.001__create_index_email.sql<pre><code>\n</code></pre> <pre><code>&gt; mvn clean package spring-boot:run\n</code></pre>"},{"location":"auth/main/","title":"3. Auth API","text":""},{"location":"auth/main/#servico-de-autenticacao-auth-api","title":"Servi\u00e7o de Autentica\u00e7\u00e3o (Auth API) \ud83d\udd10","text":"<p>A Auth API \u00e9 um componente de seguran\u00e7a crucial. Sua responsabilidade prim\u00e1ria \u00e9 a autentica\u00e7\u00e3o de usu\u00e1rios e a emiss\u00e3o de tokens JWT que s\u00e3o essenciais para proteger e autorizar as comunica\u00e7\u00f5es em todos os microsservi\u00e7os do dom\u00ednio <code>store</code>. Este servi\u00e7o garante a integridade e a seguran\u00e7a de todas as requisi\u00e7\u00f5es subsequentes.</p>"},{"location":"auth/main/#componentes-chave","title":"\ud83d\udca1 Componentes Chave","text":""},{"location":"auth/main/#o-servico-principal-auth-service","title":"O Servi\u00e7o Principal (<code>auth-service</code>)","text":"<p>O servi\u00e7o de autentica\u00e7\u00e3o \u00e9 constru\u00eddo em Spring Boot (Java) e atua como a autoridade central para emiss\u00e3o de tokens.</p> <ul> <li>Exposi\u00e7\u00e3o: Exp\u00f5e endpoints p\u00fablicos (<code>/login</code>, <code>/register</code>).</li> <li>Depend\u00eancia: Se comunica com o <code>account-service</code> para validar as credenciais do usu\u00e1rio.</li> <li>Gera\u00e7\u00e3o de Token: Emite tokens JWT (JSON Web Token) que s\u00e3o assinados usando a chave secreta definida em <code>JWT_SECRET_KEY</code>.</li> </ul>"},{"location":"auth/main/#fluxo-de-autenticacao-login","title":"\u27a1\ufe0f Fluxo de Autentica\u00e7\u00e3o (Login)","text":"<ol> <li>O Cliente envia as credenciais (<code>email</code> e <code>password</code>) para o endpoint de login: <code>/auth/login</code>.</li> <li>A Auth API realiza a valida\u00e7\u00e3o dessas credenciais junto ao <code>account-service</code>.</li> <li>Em caso de sucesso na valida\u00e7\u00e3o, um Token JWT \u00e9 criado, assinado e retornado ao cliente.</li> <li>O Gateway passa a usar este JWT para validar as requisi\u00e7\u00f5es subsequentes, extraindo e injetando o ID do usu\u00e1rio (<code>id-account</code>) nos headers para os outros microsservi\u00e7os.</li> </ol> <p>Importante: Ap\u00f3s o login bem-sucedido, o JWT deve ser inclu\u00eddo no header <code>Authorization: Bearer &lt;token&gt;</code> em todas as requisi\u00e7\u00f5es futuras para servi\u00e7os protegidos (como <code>account</code>, <code>order</code>, <code>product</code>, etc.).</p> <pre><code>sequenceDiagram\n    participant C as Cliente\n    participant G as Gateway\n    participant A as Auth-Service\n    participant AS as Account-Service\n\n    C-&gt;&gt;G: POST /auth/login (email, password)\n    G-&gt;&gt;A: Requisi\u00e7\u00e3o de Login\n    A-&gt;&gt;AS: Valida Credenciais\n    AS--&gt;&gt;A: Credenciais V\u00e1lidas (ID da Conta)\n    A-&gt;&gt;A: Gera\u00e7\u00e3o e Assinatura do JWT\n    A--&gt;&gt;G: Retorna JWT\n    G--&gt;&gt;C: Retorna JWT\n\n    C-&gt;&gt;G: GET /product/... (Authorization: Bearer JWT)\n    G-&gt;&gt;A: Valida e Resolve JWT\n    A--&gt;&gt;G: Token V\u00e1lido (id-account)\n    G-&gt;&gt;G: Injeta Header: X-Account-ID\n    G-&gt;&gt;O: Requisi\u00e7\u00e3o para Outros Servi\u00e7os (O)</code></pre>"},{"location":"auth/main/#visao-do-ecossistema-fluxo-de-dados","title":"\ud83d\uddfa\ufe0f Vis\u00e3o do Ecossistema (Fluxo de Dados)","text":"<p>O diagrama a seguir destaca a posi\u00e7\u00e3o central da Auth API dentro do ecossistema de seguran\u00e7a:</p> <pre><code>graph TD\n    subgraph Trusted Layer\n        direction TB\n        G[\ud83d\udee1\ufe0f Gateway] --&gt; A(\ud83d\udd10 Auth);\n        G --&gt; P(\u2699\ufe0f Product);\n        G --&gt; C(\ud83d\udc64 Account);\n        A --&gt; C;\n        C --&gt; D(\ud83d\uddc4\ufe0f Database);\n        P --&gt; D;\n    end\n    I(\ud83c\udf0e Internet) --&gt; G;</code></pre>"},{"location":"auth/main/#modulo-de-contrato-auth","title":"\ud83c\udfd7\ufe0f M\u00f3dulo de Contrato (auth)","text":"<p>Cont\u00e9m as interfaces p\u00fablicas e os DTOs utilizados para a autentica\u00e7\u00e3o e registro.</p> <pre><code>\ud83d\udcc1 api/\n\u2514\u2500\u2500 \ud83d\udcc1 auth/\n    \u251c\u2500\u2500 \ud83d\udcc1 src/\n    \u2502   \u2514\u2500\u2500 \ud83d\udcc1 main/\n    \u2502       \u2514\u2500\u2500 \ud83d\udcc1 java/\n    \u2502           \u2514\u2500\u2500 \ud83d\udcc1 store/\n    \u2502               \u2514\u2500\u2500 \ud83d\udcc1 auth/\n    \u2502                   \u251c\u2500\u2500 \ud83d\udcc4 AuthController.java\n    \u2502                   \u251c\u2500\u2500 \ud83d\udcc4 LoginIn.java\n    \u2502                   \u251c\u2500\u2500 \ud83d\udcc4 RegisterIn.java\n    \u2502                   \u2514\u2500\u2500 \ud83d\udcc4 TokenOut.java\n    \u251c\u2500\u2500 \ud83d\udcc4 pom.xml\n    \u2514\u2500\u2500 \ud83d\udcc4 Jenkinsfile\n</code></pre> Source <pre><code>=== \"pom.xml\"\n\n    ``` { .yaml .copy .select linenums=\"1\" }\n    ```\n\n=== \"Jenkinsfile\"\n\n    ``` { .jenkinsfile .copy .select linenums=\"1\" }\n    ```\n\n=== \"AuthController.java\"\n\n    ``` { .java title='AuthController.java' .copy .select linenums='1' }\n    ```\n\n=== \"LoginIn.java\"\n\n    ``` { .java title='LoginIn.java' .copy .select linenums='1' }\n    ```\n\n=== \"RegisterIn.java\"\n\n    ``` { .java title='RegisterIn.java' .copy .select linenums='1' }\n    ```\n\n=== \"TokenOut.java\"\n\n    ``` { .java title='TokenOut.java' .copy .select linenums='1' }\n    ```\n</code></pre> <pre><code>&gt; mvn clean install\n</code></pre>"},{"location":"auth/main/#modulo-de-implementacao-auth-service","title":"\u2699\ufe0f M\u00f3dulo de Implementa\u00e7\u00e3o (auth-service)","text":"<p>Onde a l\u00f3gica de autentica\u00e7\u00e3o e a emiss\u00e3o do JWT s\u00e3o implementadas.</p> <pre><code>\ud83d\udcc1 api/\n\u2514\u2500\u2500 \ud83d\udcc1 auth-service/\n    \u251c\u2500\u2500 \ud83d\udcc1 k8s/\n    \u2502   \u2514\u2500\u2500 \ud83d\udcc4 k8s.yaml\n    \u251c\u2500\u2500 \ud83d\udcc1 src/\n    \u2502   \u251c\u2500\u2500 \ud83d\udcc1 main/\n    \u2502   \u2502   \u2514\u2500\u2500 \ud83d\udcc1 java/\n    \u2502   \u2502       \u2514\u2500\u2500 \ud83d\udcc1 store/\n    \u2502   \u2502           \u2514\u2500\u2500 \ud83d\udcc1 auth/\n    \u2502   \u2502               \u251c\u2500\u2500 \ud83d\udcc4 AuthApplication.java\n    \u2502   \u2502               \u251c\u2500\u2500 \ud83d\udcc4 AuthResource.java\n    \u2502   \u2502               \u251c\u2500\u2500 \ud83d\udcc4 AuthService.java\n    \u2502   \u2502               \u2514\u2500\u2500 \ud83d\udcc4 JwtService.java\n    \u2502   \u2514\u2500\u2500 \ud83d\udcc1 resources/\n    \u2502       \u2514\u2500\u2500 \ud83d\udcc4 application.yaml\n    \u251c\u2500\u2500 \ud83d\udcc4 pom.xml\n    \u251c\u2500\u2500 \ud83d\udcc4 Dockerfile\n    \u2514\u2500\u2500 \ud83d\udcc4 Jenkinsfile\n</code></pre> Source <pre><code>=== \"pom.xml\"\n\n    ``` { .yaml .copy .select linenums=\"1\" }\n    ```\n\n=== \"Dockerfile\"\n\n    ``` { .java .copy .select linenums='1' }\n    ```\n\n=== \"Jenkinsfile\"\n\n    ``` { .jenkinsfile .copy .select linenums=\"1\" }\n    ```\n\n=== \"k8s.yaml\"\n\n    ``` { .yaml .copy .select linenums=\"1\" }\n    ```\n\n=== \"application.yaml\"\n\n    ``` { .yaml .copy .select linenums=\"1\" }\n    ```\n\n=== \"AuthApplication.java\"\n\n    ``` { .java .copy .select linenums='1' }\n    ```\n\n=== \"AuthResource.java\"\n\n    ``` { .java .copy .select linenums='1' }\n    ```\n\n=== \"AuthService.java\"\n\n    ``` { .java .copy .select linenums='1' }\n    ```\n\n=== \"JwtService.java\"\n\n    ``` { .java .copy .select linenums='1' }\n    ```\n</code></pre> <pre><code>&gt; mvn clean package spring-boot:run\n</code></pre>"},{"location":"bottlenecks/main/","title":"9. Bottlenecks","text":""},{"location":"bottlenecks/main/#estrategias-de-resiliencia-e-escalabilidade-eksredis","title":"Estrat\u00e9gias de Resili\u00eancia e Escalabilidade (EKS/Redis) \ud83d\ude80","text":"<p>Este documento detalha as medidas de engenharia adotadas no <code>store-api</code> para garantir a alta disponibilidade e mitigar gargalos de desempenho. As estrat\u00e9gias se concentram em dois pilares principais:</p> <ol> <li>Balanceamento de Carga e Ponto de Entrada \u00danico (AWS ELB).</li> <li>Cache Distribu\u00eddo para otimiza\u00e7\u00e3o de leitura (Redis).</li> </ol>"},{"location":"bottlenecks/main/#1-entrada-e-balanceamento-de-carga-aws-elb","title":"1. Entrada e Balanceamento de Carga (AWS ELB)","text":"<p>O Gateway Service \u00e9 o ponto de entrada prim\u00e1rio e a primeira camada de resili\u00eancia. Todas as requisi\u00e7\u00f5es externas s\u00e3o distribu\u00eddas por um Load Balancer nativo da AWS.</p> <p>\ud83d\udce2 Service Type LoadBalancer:</p> <p>O Service Kubernetes do Gateway \u00e9 do tipo <code>LoadBalancer</code>. Essa configura\u00e7\u00e3o instrui o AWS EKS (Elastic Kubernetes Service) a provisionar automaticamente um Elastic Load Balancer (ELB) dedicado para o tr\u00e1fego do dom\u00ednio.</p>"},{"location":"bottlenecks/main/#topologia-de-roteamento","title":"\ud83d\udd39 Topologia de Roteamento","text":"<pre><code>graph TD\n\u00a0 \u00a0 A[Usuario] --&gt;|Tr\u00e1fego HTTP/HTTPS| B(AWS Elastic Load Balancer);\n\u00a0 \u00a0 B --&gt; C[Gateway Service];\n\u00a0 \u00a0 C --&gt; D(Auth API);\n\u00a0 \u00a0 C --&gt; E(Order API);\n\u00a0 \u00a0 C --&gt; F(Product API);</code></pre>"},{"location":"bottlenecks/main/#2-cache-distribuido-de-produtos-redis","title":"2. Cache Distribu\u00eddo de Produtos (Redis)","text":"<p>O Product Service utiliza uma inst\u00e2ncia do Redis como camada de cache prim\u00e1ria. O objetivo \u00e9 reduzir a lat\u00eancia de leituras frequentes e diminuir a carga sobre o banco de dados principal (PostgreSQL). A implementa\u00e7\u00e3o \u00e9 realizada atrav\u00e9s da abstra\u00e7\u00e3o de cache do Spring Boot.</p>"},{"location":"bottlenecks/main/#fluxo-de-decisao-do-cache-aside","title":"\ud83d\udd39 Fluxo de Decis\u00e3o do Cache-Aside","text":"<pre><code>flowchart TD\n\u00a0 \u00a0 A[Requisi\u00e7\u00e3o GET /product] --&gt; B{Produto est\u00e1 no Redis?};\n\u00a0 \u00a0 B -- Sim (HIT) --&gt; C[Retorna do Cache (Baixa Lat\u00eancia)];\n\u00a0 \u00a0 B -- N\u00e3o (MISS) --&gt; D[Busca no PostgreSQL];\n\u00a0 \u00a0 D --&gt; E[Grava Resultado no Redis];\n\u00a0 \u00a0 E --&gt; C;</code></pre>"},{"location":"bottlenecks/main/#politica-de-cache-do-product-service","title":"\ud83d\udd39 Pol\u00edtica de Cache do Product Service","text":"Estrat\u00e9gia de Cache Anota\u00e7\u00e3o / Chave Tempo de Vida (TTL) Lista Completa <code>@Cacheable(\"products-list\")</code> 2 minutos Item Individual <code>@Cacheable(\"product-by-id\")</code> 10 minutos Modifica\u00e7\u00e3o (CRUD) <code>@CacheEvict</code> nas chaves afetadas (Ilimitado)"},{"location":"bottlenecks/main/#3-implementacao-do-redis-kubernetes-clusterip","title":"3. Implementa\u00e7\u00e3o do Redis (Kubernetes ClusterIP)","text":"<p>O Redis \u00e9 implantado em um Deployment dedicado no cluster e exposto internamente via Service do tipo ClusterIP para garantir que apenas microsservi\u00e7os internos possam acess\u00e1-lo.</p> <pre><code>kind: Deployment\n# ...\nspec:\n  replicas: 1\n  template:\n    # ...\n    spec:\n      containers:\n        - name: redis\n          image: redis:latest\n          ports:\n            - containerPort: 6379\n---\nkind: Service\nspec:\n  type: ClusterIP\n  ports:\n    - port: 6379\n      targetPort: 6379\n  selector:\n    app: redis\n</code></pre>"},{"location":"bottlenecks/main/#configuracao-de-conexao-product-service","title":"\ud83d\udd39 Configura\u00e7\u00e3o de Conex\u00e3o (Product Service)","text":"<p>O Product Service utiliza as seguintes vari\u00e1veis de ambiente para a conex\u00e3o segura interna:</p> Vari\u00e1vel Valor Finalidade <code>SPRING_CACHE_TYPE</code> <code>redis</code> Ativa o cache Redis no Spring Boot. <code>SPRING_DATA_REDIS_HOST</code> <code>redis</code> Resolve o DNS interno do Service ClusterIP. <code>SPRING_DATA_REDIS_PORT</code> <code>6379</code> Porta padr\u00e3o do Redis."},{"location":"bottlenecks/main/#beneficios-consolidados","title":"\ud83d\udca1 Benef\u00edcios Consolidados","text":"<ul> <li>Distribui\u00e7\u00e3o Autom\u00e1tica: O ELB distribui o tr\u00e1fego uniformemente para as inst\u00e2ncias do Gateway Service.</li> <li>Leituras R\u00e1pidas: O Redis elimina a necessidade de acessar o PostgreSQL para dados frequentes, reduzindo o tempo de resposta em at\u00e9 90%.</li> <li>Prote\u00e7\u00e3o de Banco de Dados: A estrat\u00e9gia de cache reduz significativamente a press\u00e3o de E/S (I/O) no PostgreSQL.</li> <li>Escalabilidade Horizontal: Todos os servi\u00e7os s\u00e3o stateless (com exce\u00e7\u00e3o da persist\u00eancia no DB/Redis), permitindo escalabilidade horizontal el\u00e1stica via Horizontal Pod Autoscaler (HPA) do Kubernetes.</li> </ul> <p>!!! success \"Conclus\u00e3o da Arquitetura de Bottlenecks\"</p> <pre><code>A combina\u00e7\u00e3o do **AWS ELB** (resili\u00eancia e entrada \u00fanica) e do **Redis Cache** (desempenho e otimiza\u00e7\u00e3o de dados) estabelece uma arquitetura robusta e escal\u00e1vel, pronta para gerenciar picos de demanda no ecossistema `store-api`.\n</code></pre>"},{"location":"exchange/main/","title":"6. Exchange API","text":""},{"location":"exchange/main/#servico-de-cambio-exchange-api","title":"Servi\u00e7o de C\u00e2mbio (Exchange API) \ud83d\udcb1","text":"<p>A Exchange API \u00e9 respons\u00e1vel por fornecer cota\u00e7\u00f5es de c\u00e2mbio precisas para o dom\u00ednio <code>store</code>. Ele permite a convers\u00e3o entre moedas (<code>from_curr</code> para <code>to_curr</code>), aplicando automaticamente o spread configurado. Todas as opera\u00e7\u00f5es s\u00e3o rastreadas e vinculadas ao usu\u00e1rio autenticado.</p>"},{"location":"exchange/main/#regras-de-acesso-e-seguranca","title":"\ud83d\udd12 Regras de Acesso e Seguran\u00e7a","text":"<p>O Exchange API est\u00e1 situado dentro da Trusted Layer (Camada de Confian\u00e7a) e, portanto, exige autentica\u00e7\u00e3o completa:</p> <p>\ud83d\udeaa Ponto de Acesso: Exclusivamente via Gateway.</p> <p>\ud83d\udd11 Autoriza\u00e7\u00e3o: A rota <code>/exchange/**</code> \u00e9 protegida. O cliente deve enviar o cabe\u00e7alho: <code>Authorization: Bearer &lt;jwt&gt;</code>.</p>"},{"location":"exchange/main/#implementacao-e-dependencias","title":"\ud83d\udc0d Implementa\u00e7\u00e3o e Depend\u00eancias","text":"<p>O servi\u00e7o de c\u00e2mbio tem uma implementa\u00e7\u00e3o distinta dos demais:</p> <ul> <li>Tecnologia: \u00c9 um microsservi\u00e7o desenvolvido em FastAPI (framework Python de alta performance).</li> <li>Fun\u00e7\u00e3o Central: Busca a taxa base de um provedor externo (via HTTP) e aplica uma margem (<code>spread</code>) para determinar os valores finais de compra e venda.</li> <li>Sa\u00edda: Retorna a cota\u00e7\u00e3o processada (<code>QuoteOut</code>), incluindo os pre\u00e7os de compra (buy) e venda (sell).</li> </ul> <pre><code>erDiagram\n    QUOTE_OUT {\n        String idAccount PK, FK\n        Double sell\n        Double buy\n        String date\n    }</code></pre>"},{"location":"exchange/main/#fluxo-operacional-gateway-e-terceiros","title":"\ud83d\udd01 Fluxo Operacional (Gateway e Terceiros)","text":"<p>A consulta de c\u00e2mbio \u00e9 o \u00fanico fluxo que interage com uma API externa (Terceiros):</p> <pre><code>sequenceDiagram\n    participant C as Cliente\n    participant G as Gateway\n    participant ES as Exchange-Service\n    participant TP as 3rd-party API\n\n    C-&gt;&gt;G: GET /exchange?from=USD&amp;to=BRL\n    G-&gt;&gt;ES: Requisi\u00e7\u00e3o com X-Account-ID\n    ES-&gt;&gt;TP: Consulta Taxa Base (HTTP)\n    TP--&gt;&gt;ES: Retorna Taxa Bruta\n    ES-&gt;&gt;ES: Aplica Spread e Converte para QuoteOut\n    ES--&gt;&gt;G: Retorna Cota\u00e7\u00e3o Final (QuoteOut)\n    G--&gt;&gt;C: Resposta</code></pre>"},{"location":"exchange/main/#estrutura-do-exchange-service-python","title":"\ud83d\udcc1 Estrutura do Exchange-Service (Python)","text":"<p>A estrutura do projeto em Python (<code>app/</code>) \u00e9 organizada em m\u00f3dulos para configura\u00e7\u00e3o, autentica\u00e7\u00e3o e clientes de API.</p> <pre><code>\ud83d\udcc1 api/\n\u2514\u2500\u2500 \ud83d\udcc1 exchange-service/\n    \u251c\u2500\u2500 \ud83d\udcc1 app/\n    \u2502   \u251c\u2500\u2500 \ud83d\udcc4 __init__.py\n    \u2502   \u251c\u2500\u2500 \ud83d\udcc4 main.py\n    \u2502   \u251c\u2500\u2500 \ud83d\udcc4 auth.py\n    \u2502   \u251c\u2500\u2500 \ud83d\udcc4 config.py\n    \u2502   \u251c\u2500\u2500 \ud83d\udcc4 models.py\n    \u2502   \u2514\u2500\u2500 \ud83d\udcc1 clients/\n    \u2502       \u251c\u2500\u2500 \ud83d\udcc4 __init__.py\n    \u2502       \u2514\u2500\u2500 \ud83d\udcc4 rates.py\n    \u251c\u2500\u2500 \ud83d\udcc4 requirements.txt\n    \u2514\u2500\u2500 \ud83d\udcc4 Dockerfile\n</code></pre> Source <p>=== \"requirements.txt\"</p> <p><code>{ .txt .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/exchange-service/refs/heads/main/requirements.txt\"</code></p> <p>=== \"Dockerfile\"</p> <p><code>{ .dockerfile .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/exchange-service/refs/heads/main/DockerFile\"</code></p> <p>=== \"main.py\"</p> <p><code>{ .python .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/exchange-service/refs/heads/main/app/main.py\"</code></p> <p>=== \"auth.py\"</p> <p><code>{ .python .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/exchange-service/refs/heads/main/app/auth.py\"</code></p> <p>=== \"config.py\"</p> <p><code>{ .python .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/exchange-service/refs/heads/main/app/config.py\"</code></p> <p>=== \"models.py\"</p> <p><code>{ .python .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/exchange-service/refs/heads/main/app/models.py\"</code></p> <p>=== \"clients/rates.py\"</p> <p><code>{ .python .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/exchange-service/refs/heads/main/app/clients/rates.py\"</code></p>"},{"location":"gateway/main/","title":"2. Gateway API","text":""},{"location":"gateway/main/#api-gateway-proxy-reverso-e-seguranca","title":"API Gateway (Proxy Reverso e Seguran\u00e7a) \ud83d\udee1\ufe0f","text":"<p>O Gateway API \u00e9 o proxy reverso e o ponto \u00fanico de entrada (Single Entry Point) da arquitetura de microsservi\u00e7os <code>store</code>. Sua fun\u00e7\u00e3o \u00e9 cr\u00edtica: rotear o tr\u00e1fego externo para o servi\u00e7o correto, aplicar autentica\u00e7\u00e3o e autoriza\u00e7\u00e3o centralizadas e garantir a seguran\u00e7a e a resili\u00eancia da plataforma.</p>"},{"location":"gateway/main/#funcoes-essenciais-trusted-layer","title":"\ud83c\udfaf Fun\u00e7\u00f5es Essenciais (Trusted Layer)","text":"<p>Toda comunica\u00e7\u00e3o externa com os microsservi\u00e7os do projeto deve seguir este fluxo obrigat\u00f3rio:</p> <ul> <li>Entrada Exclusiva: \u2b05\ufe0f Todas as requisi\u00e7\u00f5es chegam primeiro ao Gateway.</li> <li>Valida\u00e7\u00e3o de Seguran\u00e7a: O Gateway verifica a presen\u00e7a e a validade do JWT.</li> <li>Inje\u00e7\u00e3o de Contexto: Ap\u00f3s a valida\u00e7\u00e3o, injeta o ID da conta (<code>id-account</code>) nos headers HTTP.</li> <li>Roteamento: \u27a1\ufe0f Redireciona a requisi\u00e7\u00e3o para o microsservi\u00e7o de destino (<code>account</code>, <code>order</code>, <code>product</code>, etc.).</li> </ul>"},{"location":"gateway/main/#arquitetura-e-fluxo-de-filtros","title":"\ud83d\udea6 Arquitetura e Fluxo de Filtros","text":"<p>O <code>gateway-service</code> \u00e9 constru\u00eddo com Spring Cloud Gateway (Java). O roteamento e as pol\u00edticas de seguran\u00e7a s\u00e3o aplicadas por meio de filtros customizados na cadeia de requisi\u00e7\u00f5es.</p> Componente Responsabilidade L\u00f3gica Chave <code>AuthorizationFilter</code> Seguran\u00e7a e Autentica\u00e7\u00e3o Filtro principal que valida o JWT e enriquece a requisi\u00e7\u00e3o com o <code>id-account</code>. <code>RouterValidator</code> Defini\u00e7\u00e3o de Rotas Determina quais endpoints (rotas) s\u00e3o p\u00fablicos e quais exigem um JWT (rotas seguras). <code>CorsFilter</code> Gerenciamento CORS Configura\u00e7\u00f5es para permitir requisi\u00e7\u00f5es seguras de front-ends hospedados em dom\u00ednios diferentes."},{"location":"gateway/main/#ciclo-de-vida-da-requisicao","title":"Ciclo de Vida da Requisi\u00e7\u00e3o","text":"<pre><code>flowchart TD\n    A[Requisi\u00e7\u00e3o Externa] --&gt; B{CorsFilter};\n    B --&gt; C{RouterValidator: \u00c9 uma Rota Segura?};\n    C -- Sim --&gt; D{AuthorizationFilter};\n    D -- JWT V\u00e1lido --&gt; E[Injeta id-account no Header];\n    E --&gt; F[Roteamento para Microsservi\u00e7o];\n    C -- N\u00e3o (e.g., /auth/login) --&gt; F;</code></pre>"},{"location":"gateway/main/#topologia-de-rede-e-roteamento","title":"\ud83d\uddfa\ufe0f Topologia de Rede e Roteamento","text":"<p>O Gateway \u00e9 a camada desprotegida (p\u00fablica) que serve como frontend da arquitetura de servi\u00e7os protegidos:</p> <pre><code>graph TD\n    subgraph Trusted Layer\n        direction LR\n        G(\ud83d\udee1\ufe0f Gateway)\n        G --&gt; M1[Account API]\n        G --&gt; M2[Auth API]\n        G --&gt; M3[Order API]\n        G --&gt; M4[...]\n    end\n    I(\ud83c\udf0e Cliente / Internet) --&gt; G;</code></pre>"},{"location":"gateway/main/#implementacao-do-gateway-service","title":"\ud83d\udee0\ufe0f Implementa\u00e7\u00e3o do Gateway Service","text":"<p>O projeto cont\u00e9m o c\u00f3digo do servi\u00e7o de Gateway, incluindo a l\u00f3gica de seguran\u00e7a no subpacote <code>security</code>.</p> <pre><code>\ud83d\udcc1 api\n\u2514\u2500\u2500 \ud83d\udcc1 gateway-service/\n    \u251c\u2500\u2500 \ud83d\udcc1 k8s/\n    \u2502   \u2514\u2500\u2500 \ud83d\udcc4 k8s.yaml\n    \u251c\u2500\u2500 \ud83d\udcc1 src/\n    \u2502   \u2514\u2500\u2500 \ud83d\udcc1 main/\n    \u2502       \u251c\u2500\u2500 \ud83d\udcc1 java/\n    \u2502       \u2502   \u2514\u2500\u2500 \ud83d\udcc1 store/\n    \u2502       \u2502       \u2514\u2500\u2500 \ud83d\udcc1 gateway/\n    \u2502       \u2502           \u251c\u2500\u2500 \ud83d\udcc4 GatewayApplication.java\n    \u2502       \u2502           \u251c\u2500\u2500 \ud83d\udcc4 GatewayResource.java\n    \u2502       \u2502           \u2514\u2500\u2500 \ud83d\udcc1 security\n    \u2502       \u2502               \u251c\u2500\u2500 \ud83d\udcc4 CorsFilter.java\n    \u2502       \u2502               \u251c\u2500\u2500 \ud83d\udcc4 AuthorizationFilter.java\n    \u2502       \u2502               \u2514\u2500\u2500 \ud83d\udcc4 RouterValidator.java\n    \u2502       \u2514\u2500\u2500 \ud83d\udcc1 resources/\n    \u2502           \u2514\u2500\u2500 \ud83d\udcc4 application.yaml\n    \u251c\u2500\u2500 \ud83d\udcc4 pom.xml\n    \u251c\u2500\u2500 \ud83d\udcc4 Dockerfile\n    \u2514\u2500\u2500 \ud83d\udcc4 Jenkinsfile\n</code></pre> Source <p>=== \"pom.xml\"</p> <p><code>{ .yaml .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/gateway-service/refs/heads/main/pom.xml\"</code></p> <p>=== \"Dockerfile\"</p> <p><code>{ .dockerfile .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/gateway-service/refs/heads/main/DockerFile\"</code></p> <p>=== \"Jenkinsfile\"</p> <p><code>{ .jenkinsfile .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/gateway-service/refs/heads/main/Jenkinsfile\"</code></p> <p>=== \"k8s.yaml\"</p> <p><code>{ .yaml .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/gateway-service/refs/heads/main/k8s/k8s.yaml\"</code></p> <p>=== \"application.yaml\"</p> <p><code>{ .yaml .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/gateway-service/refs/heads/main/src/main/resources/application.yaml\"</code></p> <p>=== \"GatewayApplication.java\"</p> <p><code>{ .java .copy .select linenums='1' } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/gateway-service/refs/heads/main/src/main/java/store/gateway/GatewayApplication.java\"</code></p> <p>=== \"GatewayResource.java\"</p> <p><code>{ .java .copy .select linenums='1' } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/gateway-service/refs/heads/main/src/main/java/store/gateway/GatewayResource.java\"</code></p> <p>=== \"CorsFilter.java\"</p> <p><code>{ .java .copy .select linenums='1' } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/gateway-service/refs/heads/main/src/main/java/store/gateway/security/CorsFilter.java\"</code></p> <p>=== \"AuthorizationFilter.java\"</p> <p><code>{ .java .copy .select linenums='1' } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/gateway-service/refs/heads/main/src/main/java/store/gateway/security/AuthorizationFilter.java\"</code></p> <p>=== \"RouterValidator.java\"</p> <p><code>{ .java .copy .select linenums='1' } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/gateway-service/refs/heads/main/src/main/java/store/gateway/security/RouterValidator.java\"</code></p> <pre><code>&gt; mvn clean package spring-boot:run\n</code></pre>"},{"location":"jenkins/main/","title":"7. Jenkins","text":""},{"location":"jenkins/main/#visao-geral-da-automacao-cicd-jenkins","title":"Vis\u00e3o Geral da Automa\u00e7\u00e3o CI/CD (Jenkins) \u2699\ufe0f","text":"<p>O Jenkins \u00e9 o orquestrador da Esteira de CI/CD para todos os componentes do dom\u00ednio <code>store</code>. O projeto adota uma arquitetura de pipeline dual, garantindo a separa\u00e7\u00e3o de responsabilidades entre contratos e implementa\u00e7\u00f5es:</p> <ul> <li>Padr\u00e3o 1: Pipelines de Interfaces (Compila\u00e7\u00e3o de Contratos).</li> <li>Padr\u00e3o 2: Pipelines de Servi\u00e7os (Build Docker e Publica\u00e7\u00e3o).</li> </ul>"},{"location":"jenkins/main/#comparativo-de-padroes-de-pipeline","title":"\ud83d\udd2c Comparativo de Padr\u00f5es de Pipeline","text":"Caracter\u00edstica Padr\u00e3o 1: Interfaces (<code>account</code>, <code>order</code>, ...) Padr\u00e3o 2: Servi\u00e7os (<code>account-service</code>, <code>gateway</code>, ...) Tecnologias Maven (Java/Groovy) Maven/Python + Docker Buildx Foco Gerar e publicar artefatos/contratos (<code>.jar</code>) Gerar e publicar Imagens Docker Depend\u00eancias Nenhuma Aciona o job da Interface correspondente Artefato Final <code>.jar</code> no reposit\u00f3rio Maven Imagem Docker Multi-arch no Docker Hub"},{"location":"jenkins/main/#status-operacional","title":"\ud83d\udcca Status Operacional","text":"<p>O painel de controle do Jenkins prov\u00ea visibilidade imediata sobre o estado e os runs recentes das esteiras ativas:</p> <p></p>"},{"location":"jenkins/main/#padroes-de-pipeline-groovy","title":"\ud83e\udde9 Padr\u00f5es de Pipeline (Groovy)","text":""},{"location":"jenkins/main/#1-interfaces-geracao-de-contratos-jar","title":"1. Interfaces: Gera\u00e7\u00e3o de Contratos (.JAR)","text":"<p>Objetivo: Este pipeline \u00e9 r\u00e1pido e serve apenas para compilar e instalar o artefato de contrato (DTOs, Feign) no reposit\u00f3rio Maven do Jenkins, disponibilizando-o para os servi\u00e7os que dependem dele.</p> <pre><code>pipeline {\n\u00a0 \u00a0 agent any\n\n\u00a0 \u00a0 stages {\n\u00a0 \u00a0 \u00a0 \u00a0 stage('Compilar Contrato') {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 steps {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Gera o artefato JAR e o instala no reposit\u00f3rio local/Jenkins\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 sh 'mvn -B -DskipTests clean install'\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 }\n}\n</code></pre>"},{"location":"jenkins/main/#2-servicos-build-dependencia-e-docker-multi-arch","title":"2. Servi\u00e7os: Build, Depend\u00eancia e Docker Multi-arch","text":"<p>Objetivo: Orquestra a constru\u00e7\u00e3o do bin\u00e1rio do servi\u00e7o, garante que as depend\u00eancias do contrato estejam atualizadas e, por fim, constr\u00f3i e publica a imagem Docker no Docker Hub.</p> <pre><code>pipeline {\n\u00a0 \u00a0 agent any\n\u00a0 \u00a0 environment {\n\u00a0 \u00a0 \u00a0 \u00a0 SERVICE = &lt;nome_servi\u00e7o&gt;\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // e.g., account-service, gateway-service\n\u00a0 \u00a0 \u00a0 \u00a0 NAME = \"&lt;conta_dockerhub&gt;/${env.SERVICE}\"\u00a0 \u00a0// Nome final do reposit\u00f3rio\n\u00a0 \u00a0 }\n\u00a0 \u00a0 stages {\n\u00a0 \u00a0 \u00a0 \u00a0 stage('Verificar Depend\u00eancias') {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 steps {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Aciona o job da interface correspondente e aguarda o sucesso\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 build job: &lt;nome_interface&gt;, wait: true\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 \u00a0 \u00a0 stage('Compilar Servi\u00e7o') {\u00a0\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 steps {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Compila a aplica\u00e7\u00e3o (Java: .jar, Python: requerimentos)\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 sh 'mvn -B -DskipTests clean package'\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0\u00a0\n\u00a0 \u00a0 \u00a0 \u00a0 stage('Build &amp; Push Docker Image') {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 steps {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 withCredentials([usernamePassword(\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 credentialsId: 'dockerhub-credential',\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 usernameVariable: 'USERNAME',\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 passwordVariable: 'TOKEN')]) {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 sh \"docker login -u $USERNAME -p $TOKEN\"\n\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Configura o buildx para arquiteturas m\u00faltiplas\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 sh \"docker buildx create --use --platform=linux/arm64,linux/amd64 --node multi-platform-builder-${env.SERVICE} --name multi-platform-builder-${env.SERVICE}\"\n\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Constr\u00f3i e publica tags :latest e :BUILD_ID para ambas as plataformas\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 sh \"docker buildx build --platform=linux/arm64,linux/amd64 --push --tag ${env.NAME}:latest --tag ${env.NAME}:${env.BUILD_ID} -f DockerFile .\"\n\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Limpa o builder ef\u00eamero\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 sh \"docker buildx rm --force multi-platform-builder-${env.SERVICE}\"\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 }\n}\n</code></pre>"},{"location":"jenkins/main/#fluxo-de-dependencia-interface-servico","title":"\u27a1\ufe0f Fluxo de Depend\u00eancia (Interface -&gt; Servi\u00e7o)","text":"<p>O diagrama de sequ\u00eancia a seguir ilustra o fluxo de execu\u00e7\u00e3o das pipelines com depend\u00eancia:</p> <pre><code>sequenceDiagram\n    participant I as Job Interface\n    participant S as Job Servi\u00e7o\n    participant D as Docker Buildx\n    participant R as Docker Hub\n\n    I-&gt;&gt;I: mvn clean install (Gera Contrato .JAR)\n    S-&gt;&gt;I: build job: interface, wait: true\n    I--&gt;&gt;S: Sucesso (Artefato Dispon\u00edvel)\n    S-&gt;&gt;S: mvn clean package (Compila Servi\u00e7o)\n    S-&gt;&gt;D: Inicia Buildx\n    D-&gt;&gt;D: build --platform=linux/arm64,linux/amd64\n    D-&gt;&gt;R: push tags :latest e :BUILD_ID\n    R--&gt;&gt;D: Confirma Push\n    D--&gt;&gt;S: Sucesso (Imagem Publicada)</code></pre>"},{"location":"jenkins/main/#referencia-localizacao-dos-jenkinsfiles","title":"\ud83d\udccd Refer\u00eancia: Localiza\u00e7\u00e3o dos Jenkinsfiles","text":"<p>Os scripts Groovy de pipeline para cada componente podem ser encontrados em suas respectivas documenta\u00e7\u00f5es:</p> <ul> <li>Interfaces e Servi\u00e7os Java:<ul> <li>Account: Account API</li> <li>Auth: Auth API</li> <li>Product: Product API</li> <li>Order: Order API</li> </ul> </li> <li>Servi\u00e7os (incluindo Gateway):<ul> <li>Gateway-Service: Gateway API</li> </ul> </li> </ul>"},{"location":"jenkins/main/#consideracoes-operacionais-e-tecnicas","title":"\ud83d\udcdd Considera\u00e7\u00f5es Operacionais e T\u00e9cnicas","text":"<p>: Credenciais de Acesso: O acesso ao Docker Hub para a publica\u00e7\u00e3o das imagens \u00e9 gerenciado pelo secret <code>dockerhub-credential</code>.</p> <p>: Publica\u00e7\u00e3o Multi-Arch: O uso do <code>docker buildx</code> garante que as imagens Docker sejam compat\u00edveis com m\u00faltiplas arquiteturas de CPU (<code>linux/amd64</code> e <code>linux/arm64</code>), crucial para ambientes de deploy heterog\u00eaneos.</p> <p>: Acionamento de Depend\u00eancia: A chamada <code>build job: &lt;interface&gt;</code> garante que o c\u00f3digo do servi\u00e7o esteja sempre compilando contra a \u00faltima vers\u00e3o est\u00e1vel do contrato da interface, prevenindo falhas de compila\u00e7\u00e3o por dessincroniza\u00e7\u00e3o.</p>"},{"location":"kubernets/main/","title":"8. Kubernets","text":""},{"location":"kubernets/main/#orquestracao-kubernetes-eks-arquitetura-de-deploy","title":"Orquestra\u00e7\u00e3o Kubernetes (EKS) \u2013 Arquitetura de Deploy \u2638\ufe0f","text":"<p>O ambiente Kubernetes (K8s) no AWS EKS (Elastic Kubernetes Service) \u00e9 a funda\u00e7\u00e3o que garante a orquestra\u00e7\u00e3o, a escalabilidade el\u00e1stica e a resili\u00eancia cont\u00ednua dos microsservi\u00e7os do projeto <code>store</code>. Os manifests adotam um padr\u00e3o de modulariza\u00e7\u00e3o por componente, facilitando a manuten\u00e7\u00e3o e a rastreabilidade do deploy.</p>"},{"location":"kubernets/main/#padroes-de-deploy-por-componente","title":"\ud83e\udde9 Padr\u00f5es de Deploy por Componente","text":"<p>A infraestrutura \u00e9 segmentada em tr\u00eas categorias principais de deploy e service para isolamento e controle de acesso:</p> <p>: 1. Persist\u00eancia (PostgreSQL, Redis): * Implantado via Deployment com Volumes Persistentes (futuro). * Exposi\u00e7\u00e3o estritamente interna via Service ClusterIP. * Configura\u00e7\u00f5es de credenciais via ConfigMap e Secret.</p> <p>: 2. Servi\u00e7os de Dom\u00ednio (Java/Python): * Microsservi\u00e7os (<code>account-service</code>, <code>auth-service</code>, etc.) em Deployments independentes. * Exposi\u00e7\u00e3o via Service ClusterIP. * Comunica\u00e7\u00e3o interna exclusiva por DNS do Cluster (<code>&lt;service-name&gt;.&lt;namespace&gt;.svc.cluster.local</code>).</p> <p>: 3. Ponto de Entrada (Gateway-Service): * Servi\u00e7o \u00fanico exposto via Service LoadBalancer. * Respons\u00e1vel por criar o AWS NLB/ALB, recebendo o tr\u00e1fego externo e roteando-o para o Service ClusterIP interno correspondente.</p>"},{"location":"kubernets/main/#estado-do-cluster-eks","title":"\u2601\ufe0f Estado do Cluster (EKS)","text":"<p>As imagens a seguir confirmam que todos os Deployments e Pods do projeto est\u00e3o ativos e em estado <code>Running</code> no ambiente EKS:</p> <p>[EKS Status 1: Pods em execu\u00e7\u00e3o] [EKS Status 2: Deployments e r\u00e9plicas ativas]</p>"},{"location":"kubernets/main/#mapa-de-comunicacao-do-cluster","title":"\ud83d\uddfa\ufe0f Mapa de Comunica\u00e7\u00e3o do Cluster","text":"<p>Este diagrama ilustra a topologia de rede interna e externa, destacando o fluxo de dados atrav\u00e9s do Gateway e as conex\u00f5es de persist\u00eancia.</p> <pre><code>graph TD\n\u00a0 \u00a0 subgraph AWS_EKS[\"EKS Cluster (Namespace: store)\"]\n\u00a0 \u00a0 \u00a0 \u00a0 GW[\"Gateway-Service (LoadBalancer)\"]\n\u00a0 \u00a0 \u00a0 \u00a0 EXC[\"Exchange-Service (ClusterIP)\"]\n\u00a0 \u00a0 \u00a0 \u00a0 PROD[\"Product-Service (ClusterIP)\"]\n\u00a0 \u00a0 \u00a0 \u00a0 ORD[\"Order-Service (ClusterIP)\"]\n\u00a0 \u00a0 \u00a0 \u00a0 AUTH[\"Auth-Service (ClusterIP)\"]\n\u00a0 \u00a0 \u00a0 \u00a0 ACC[\"Account-Service (ClusterIP)\"]\n\u00a0 \u00a0 \u00a0 \u00a0 DB[(PostgreSQL ClusterIP)]\n\n\u00a0 \u00a0 \u00a0 \u00a0 GW --&gt; EXC\n\u00a0 \u00a0 \u00a0 \u00a0 GW --&gt; PROD\n\u00a0 \u00a0 \u00a0 \u00a0 GW --&gt; ORD\n\u00a0 \u00a0 \u00a0 \u00a0 GW --&gt; AUTH\n\u00a0 \u00a0 \u00a0 \u00a0 GW --&gt; ACC\n\n\u00a0 \u00a0 \u00a0 \u00a0 PROD --&gt; DB\n\u00a0 \u00a0 \u00a0 \u00a0 ORD --&gt; DB\n\u00a0 \u00a0 \u00a0 \u00a0 AUTH --&gt; DB\n\u00a0 \u00a0 \u00a0 \u00a0 ACC --&gt; DB\n\u00a0 \u00a0 \u00a0 \u00a0 EXC --&gt; 3PP\n\u00a0 \u00a0 end\n\n\u00a0 \u00a0 EXT[Internet Client]\n\u00a0 \u00a0 3PP[API Terceira]\n\u00a0 \u00a0 EXT --&gt; GW</code></pre>"},{"location":"kubernets/main/#onde-encontrar-os-manifests-de-deploy","title":"\ud83d\udccd Onde Encontrar os Manifests de Deploy","text":"<p>Todos os arquivos de configura\u00e7\u00e3o do Kubernetes (<code>k8s.yaml</code>) s\u00e3o versionados junto ao c\u00f3digo-fonte na subpasta <code>k8s</code> de cada m\u00f3dulo:</p> <ul> <li>Account-Service: Account API</li> <li>Auth-Service: Auth API</li> <li>Gateway-Service: Gateway API</li> <li>Product-Service: Product API</li> <li>Order-Service: Order API</li> </ul>"},{"location":"kubernets/main/#notas-de-configuracao-do-ambiente","title":"\ud83d\udcdd Notas de Configura\u00e7\u00e3o do Ambiente","text":"Par\u00e2metro Detalhe Finalidade Namespace Padr\u00e3o <code>store</code> Garante isolamento l\u00f3gico e f\u00e1cil gest\u00e3o de recursos. Exposi\u00e7\u00e3o Externa <code>Service: LoadBalancer</code> Prov\u00ea acesso p\u00fablico e distribu\u00eddo via AWS ELB. Rede Interna <code>Service: ClusterIP</code> Comunica\u00e7\u00e3o eficiente e segura baseada em DNS do K8s. Compatibilidade EKS, Minikube, Kind Permite testes e desenvolvimento em ambientes locais e de produ\u00e7\u00e3o. <p>Nota: A persist\u00eancia de dados via volume (<code>PersistentVolume</code>) para o banco de dados \u00e9 uma melhoria a ser implementada, garantindo que o ciclo de vida dos dados seja independente do ciclo de vida dos pods.</p> <p>\u2705 Conclus\u00e3o: Todos os manifests do Kubernetes seguem um padr\u00e3o modular e est\u00e3o prontos para deploy no cluster AWS EKS. Esta estrutura garante o isolamento por servi\u00e7o, a integra\u00e7\u00e3o completa via Gateway e a capacidade de escalar sob demanda.</p>"},{"location":"order/main/","title":"5. Order API","text":""},{"location":"order/main/#microservico-de-pedidos-order-api","title":"Microservi\u00e7o de Pedidos (Order API) \ud83d\uded2","text":"<p>A Order API centraliza a gest\u00e3o de pedidos (<code>orders</code>) no dom\u00ednio <code>store</code>. Sua principal fun\u00e7\u00e3o \u00e9 permitir que os usu\u00e1rios autenticados criem novos pedidos e consultem seu hist\u00f3rico. Este servi\u00e7o segue o padr\u00e3o arquitetural do projeto, sendo dividido em Contrato (<code>order</code>) e Implementa\u00e7\u00e3o (<code>order-service</code>).</p>"},{"location":"order/main/#seguranca-e-acesso-restrito","title":"\ud83d\udea8 Seguran\u00e7a e Acesso Restrito","text":"<p>O acesso a este servi\u00e7o \u00e9 estritamente controlado para garantir que apenas usu\u00e1rios autenticados possam gerenciar seus pedidos.</p> <ul> <li>Todas as requisi\u00e7\u00f5es devem passar pelo Gateway.</li> <li>As rotas sob <code>/order/**</code> s\u00e3o protegidas por JWT.</li> <li>\u00c9 obrigat\u00f3rio o envio do cabe\u00e7alho: <code>Authorization: Bearer &lt;jwt&gt;</code>.</li> </ul>"},{"location":"order/main/#estrutura-modular","title":"\ud83c\udfd7\ufe0f Estrutura Modular","text":"<p>O microsservi\u00e7o de pedidos \u00e9 logicamente dividido para manter a separa\u00e7\u00e3o de preocupa\u00e7\u00f5es:</p> <p>: Interface (<code>order</code>): Define o Contrato P\u00fablico da API, incluindo DTOs (<code>OrderIn</code>, <code>OrderOut</code>, <code>OrderItemIn</code>, <code>OrderItemOut</code>) e a interface Feign para comunica\u00e7\u00e3o entre servi\u00e7os e front-ends.</p> <p>: Service (<code>order-service</code>): Cont\u00e9m a L\u00f3gica de Neg\u00f3cio completa. \u00c9 respons\u00e1vel pela camada REST, regras de valida\u00e7\u00e3o, persist\u00eancia via JPA e gerenciamento de esquema com Flyway.</p> <pre><code>erDiagram\n    ORDER ||--o{ ORDER_ITEM : cont\u00e9m\n    ORDER {\n        String id PK\n        String date\n    }\n    ORDER_ITEM {\n        String id PK\n        String id_product FK\n        int quantity\n        Double total\n    }</code></pre>"},{"location":"order/main/#fluxo-de-criacao-de-pedidos-inter-servicos","title":"\ud83c\udf10 Fluxo de Cria\u00e7\u00e3o de Pedidos (Inter-servi\u00e7os)","text":"<p>O processo de cria\u00e7\u00e3o de um novo pedido envolve comunica\u00e7\u00e3o com outros microsservi\u00e7os para garantir a integridade dos dados (por exemplo, validando pre\u00e7os de produtos).</p> <pre><code>sequenceDiagram\n    participant C as Cliente\n    participant G as Gateway\n    participant OS as Order-Service\n    participant PS as Product-Service\n    participant DB as Database\n\n    C-&gt;&gt;G: POST /order (OrderIn)\n    G-&gt;&gt;OS: Requisi\u00e7\u00e3o com X-Account-ID\n    OS-&gt;&gt;PS: Consulta Detalhes/Pre\u00e7o do Produto\n    PS--&gt;&gt;OS: Retorna ProductOut (Pre\u00e7o)\n    OS-&gt;&gt;OS: Calcula Total do Pedido\n    OS-&gt;&gt;DB: Salva Entidades (Order, OrderItem)\n    DB--&gt;&gt;OS: Confirma\n    OS--&gt;&gt;G: Retorna OrderOut\n    G--&gt;&gt;C: Resposta Final</code></pre>"},{"location":"order/main/#modulo-de-contrato-order","title":"\ud83d\udcd8 M\u00f3dulo de Contrato (order)","text":"<p>Cont\u00e9m a defini\u00e7\u00e3o dos Data Transfer Objects (DTOs) utilizados em todas as comunica\u00e7\u00f5es.</p> <pre><code>\ud83d\udcc1 api/\n\u2514\u2500\u2500 \ud83d\udcc1 order/\n    \u251c\u2500\u2500 \ud83d\udcc1 src/\n    \u2502   \u2514\u2500\u2500 \ud83d\udcc1 main/\n    \u2502       \u2514\u2500\u2500 \ud83d\udcc1 java/\n    \u2502           \u2514\u2500\u2500 \ud83d\udcc1 store/\n    \u2502               \u2514\u2500\u2500 \ud83d\udcc1 order/\n    \u2502                   \u251c\u2500\u2500 \ud83d\udcc4 OrderController.java\n    \u2502                   \u251c\u2500\u2500 \ud83d\udcc4 OrderIn.java\n    \u2502                   \u251c\u2500\u2500 \ud83d\udcc4 OrderOut.java\n    \u2502                   \u251c\u2500\u2500 \ud83d\udcc4 OrderItemIn.java\n    \u2502                   \u2514\u2500\u2500 \ud83d\udcc4 OrderItemOut.java\n    \u251c\u2500\u2500 \ud83d\udcc4 pom.xml\n    \u2514\u2500\u2500 \ud83d\udcc4 Jenkinsfile\n</code></pre> Source <p>=== \"pom.xml\" \u00a0 \u00a0 \u00a0 \u00a0 <code>{ .yaml .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/order/refs/heads/main/pom.xml\"</code></p> <p>=== \"Jenkinsfile\" \u00a0 \u00a0 \u00a0 \u00a0 <code>{ .jenkinsfile .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/order/refs/heads/main/Jenkinsfile\"</code></p> <p>=== \"OrderController.java\" \u00a0 \u00a0 \u00a0 \u00a0 <code>{ .java .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/order/refs/heads/main/src/main/java/store/order/OrderController.java\"</code></p> <p>=== \"OrderIn.java\" \u00a0 \u00a0 \u00a0 \u00a0 <code>{ .java .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/order/refs/heads/main/src/main/java/store/order/OrderIn.java\"</code></p> <p>=== \"OrderOut.java\" \u00a0 \u00a0 \u00a0 \u00a0 <code>{ .java .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/order/refs/heads/main/src/main/java/store/order/OrderOut.java\"</code></p> <p>=== \"OrderItemIn.java\" \u00a0 \u00a0 \u00a0 \u00a0 <code>{ .java .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/order/refs/heads/main/src/main/java/store/order/OrderItemIn.java\"</code></p> <p>=== \"OrderItemOut.java\" \u00a0 \u00a0 \u00a0 \u00a0 <code>{ .java .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/order/refs/heads/main/src/main/java/store/order/OrderItemOut.java\"</code></p> <pre><code>&gt; mvn clean install\n</code></pre>"},{"location":"order/main/#modulo-de-servico-order-service","title":"\ud83d\ude80 M\u00f3dulo de Servi\u00e7o (order-service)","text":"<p>Cont\u00e9m a l\u00f3gica de neg\u00f3cio, persist\u00eancia, e o interceptor Feign (<code>FeignAuthInterceptor.java</code>) para comunica\u00e7\u00f5es seguras com outros microsservi\u00e7os (como o Product API).</p> <pre><code>\ud83d\udcc1 api/\n\u2514\u2500\u2500 \ud83d\udcc1 order-service/\n    \u251c\u2500\u2500 \ud83d\udcc1 k8s/\n    \u2502   \u2514\u2500\u2500 \ud83d\udcc4 k8s.yaml\n    \u251c\u2500\u2500 \ud83d\udcc1 src/\n    \u2502   \u2514\u2500\u2500 \ud83d\udcc1 main/\n    \u2502       \u251c\u2500\u2500 \ud83d\udcc1 java/\n    \u2502       \u2502   \u2514\u2500\u2500 \ud83d\udcc1 store/\n    \u2502       \u2502       \u2514\u2500\u2500 \ud83d\udcc1 order/\n    \u2502       \u2502           \u251c\u2500\u2500 \ud83d\udcc4 Order.java\n    \u2502       \u2502           \u251c\u2500\u2500 \ud83d\udcc4 OrderItem.java\n    \u2502       \u2502           \u251c\u2500\u2500 \ud83d\udcc4 OrderApplication.java\n    \u2502       \u2502           \u251c\u2500\u2500 \ud83d\udcc4 OrderModel.java\n    \u2502       \u2502           \u251c\u2500\u2500 \ud83d\udcc4 OrderParser.java\n    \u2502       \u2502           \u251c\u2500\u2500 \ud83d\udcc4 OrderRepository.java\n    \u2502       \u2502           \u251c\u2500\u2500 \ud83d\udcc4 OrderResource.java\n    \u2502       \u2502           \u251c\u2500\u2500 \ud83d\udcc4 OrderService.java\n    \u2502       \u2502           \u2514\u2500\u2500 \ud83d\udcc4 FeignAuthInterceptor.java\n    \u2502       \u2514\u2500\u2500 \ud83d\udcc1 resources/\n    \u2502           \u251c\u2500\u2500 \ud83d\udcc4 application.yaml\n    \u2502           \u2514\u2500\u2500 \ud83d\udcc1 db/\n    \u2502               \u2514\u2500\u2500 \ud83d\udcc1 migration/\n    \u2502                   \u251c\u2500\u2500 \ud83d\udcc4 V2025.08.29.001__create_schema.sql\n    \u2502                   \u251c\u2500\u2500 \ud83d\udcc4 V2025.08.29.002__create_table_order.sql\n    \u2502                   \u2514\u2500\u2500 \ud83d\udcc4 V2025.08.29.003__create_table_order_item.sql\n    \u251c\u2500\u2500 \ud83d\udcc4 pom.xml\n    \u251c\u2500\u2500 \ud83d\udcc4 Dockerfile\n    \u2514\u2500\u2500 \ud83d\udcc4 Jenkinsfile\n</code></pre> Source <p>=== \"pom.xml\" \u00a0 \u00a0 \u00a0 \u00a0 <code>{ .yaml .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/order-service/refs/heads/main/pom.xml\"</code></p> <p>=== \"Dockerfile\" \u00a0 \u00a0 \u00a0 \u00a0 <code>{ .dockerfile .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/order-service/refs/heads/main/DockerFile\"</code></p> <p>=== \"Jenkinsfile\" \u00a0 \u00a0 \u00a0 \u00a0 <code>{ .jenkinsfile .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/order-service/refs/heads/main/Jenkinsfile\"</code></p> <p>=== \"k8s.yaml\" \u00a0 \u00a0 \u00a0 \u00a0 <code>{ .yaml .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/order-service/refs/heads/main/k8s/k8s.yaml\"</code></p> <p>=== \"application.yaml\" \u00a0 \u00a0 \u00a0 \u00a0 <code>{ .yaml .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/order-service/refs/heads/main/src/main/resources/application.yaml\"</code></p> <p>=== \"Order.java\" \u00a0 \u00a0 \u00a0 \u00a0 <code>{ .java .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/order-service/refs/heads/main/src/main/java/store/order/Order.java\"</code></p> <p>=== \"OrderItem.java\" \u00a0 \u00a0 \u00a0 \u00a0 <code>{ .java .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/order-service/refs/heads/main/src/main/java/store/order/OrderItem.java\"</code></p> <p>=== \"OrderApplication.java\" \u00a0 \u00a0 \u00a0 \u00a0 <code>{ .java .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/order-service/refs/heads/main/src/main/java/store/order/OrderApplication.java\"</code></p> <p>=== \"OrderService.java\" \u00a0 \u00a0 \u00a0 \u00a0 <code>{ .java .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/order-service/refs/heads/main/src/main/java/store/order/OrderService.java\"</code></p> <p>=== \"OrderResource.java\" \u00a0 \u00a0 \u00a0 \u00a0 <code>{ .java .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/order-service/refs/heads/main/src/main/java/store/order/OrderResource.java\"</code></p> <p>=== \"OrderRepository.java\" \u00a0 \u00a0 \u00a0 \u00a0 <code>{ .java .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/order-service/refs/heads/main/src/main/java/store/order/OrderRepository.java\"</code></p> <p>=== \"FeignAuthInterceptor.java\" \u00a0 \u00a0 \u00a0 \u00a0 <code>{ .java .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/order-service/refs/heads/main/src/main/java/store/order/FeignAuthInterceptor.java\"</code></p> <p>=== \"V2025.08.29.001__create_schema.sql\" \u00a0 \u00a0 \u00a0 \u00a0 <code>{ .sql .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/order-service/refs/heads/main/src/main/resources/db/migration/V2025.08.29.001__create_schema.sql\"</code></p> <p>=== \"V2025.08.29.002__create_table_order.sql\" \u00a0 \u00a0 \u00a0 \u00a0 <code>{ .sql .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/order-service/refs/heads/main/src/main/resources/db/migration/V2025.08.29.002__create_table_order.sql\"</code></p> <p>=== \"V2025.08.29.003__create_table_order_item.sql\" \u00a0 \u00a0 \u00a0 \u00a0 <code>{ .sql .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/order-service/refs/heads/main/src/main/resources/db/migration/V2025.08.29.003__create_table_order_item.sql\"</code></p> <pre><code>&gt; mvn clean package spring-boot:run\n</code></pre>"},{"location":"product/main/","title":"4. Product API","text":""},{"location":"product/main/#microservico-de-catalogo-product-api","title":"Microservi\u00e7o de Cat\u00e1logo (Product API)","text":"<p>Este microsservi\u00e7o \u00e9 o n\u00facleo do Cat\u00e1logo de Produtos do dom\u00ednio <code>store</code>, implementando todas as funcionalidades CRUD (Create, Read, Update, Delete). Segue o padr\u00e3o arquitetural de microsservi\u00e7os do projeto, sendo dividido em Contrato (<code>product</code>) e Implementa\u00e7\u00e3o (<code>product-service</code>), e operando sob a prote\u00e7\u00e3o do Gateway via JWT.</p>"},{"location":"product/main/#seguranca-e-acesso","title":"\ud83d\udd12 Seguran\u00e7a e Acesso","text":"<p>Todas as intera\u00e7\u00f5es externas com a API devem ser roteadas atrav\u00e9s da camada de confian\u00e7a (Gateway).</p> <p>\u26a0\ufe0f Acesso Restrito: Para acessar as rotas em <code>/product/**</code>, \u00e9 estritamente necess\u00e1rio fornecer um Token Web JSON (JWT) no cabe\u00e7alho.</p> <p>Cabe\u00e7alho Requerido: <code>Authorization: Bearer &lt;jwt&gt;</code></p>"},{"location":"product/main/#modulos-e-responsabilidades","title":"\ud83e\udde9 M\u00f3dulos e Responsabilidades","text":"<p>A l\u00f3gica do produto \u00e9 estruturada em dois m\u00f3dulos de projeto distintos:</p> M\u00f3dulo Tipo Responsabilidade Principal <code>product</code> Interface/Contrato Define os DTOs e a especifica\u00e7\u00e3o Feign para consumo por clientes internos/externos. <code>product-service</code> Servi\u00e7o/Implementa\u00e7\u00e3o Cont\u00e9m a camada REST, a l\u00f3gica de neg\u00f3cio, a persist\u00eancia (JPA) e as migra\u00e7\u00f5es do banco de dados (Flyway). <pre><code>graph TD\n\u00a0 \u00a0 A[Product-Service: L\u00f3gica de Neg\u00f3cio] --&gt; B{ProductRepository: JPA};\n\u00a0 \u00a0 B --&gt; C[Database: PostgreSQL];\n\u00a0 \u00a0 D[Product: Contrato (DTO/Feign)] --&gt; A;\n\u00a0 \u00a0 E[Consumidores (Outros M\u00f3dulos/Front)] --&gt; D;</code></pre>"},{"location":"product/main/#fluxo-de-comunicacao-de-produtos","title":"\ud83d\udea6 Fluxo de Comunica\u00e7\u00e3o de Produtos","text":"<p>Este diagrama ilustra o caminho de uma requisi\u00e7\u00e3o de produto, desde o cliente at\u00e9 a camada de persist\u00eancia:</p> <pre><code>flowchart TD\n\u00a0 \u00a0 internet(\ud83c\udf10 Cliente Externo) --&gt; gateway(\ud83d\udee1\ufe0f Gateway);\n\u00a0 \u00a0 gateway --&gt; productService[\u2699\ufe0f Product Service];\n\u00a0 \u00a0 productService --&gt; database[\ud83d\udcbe Banco de Dados];</code></pre>"},{"location":"product/main/#contrato-da-api-product","title":"\ud83d\udce6 Contrato da API (product)","text":"<p>M\u00f3dulo que define a estrutura de dados e as opera\u00e7\u00f5es dispon\u00edveis.</p> <pre><code>\ud83d\udcc1 api/\n\u2514\u2500\u2500 \ud83d\udcc1 product/\n    \u251c\u2500\u2500 \ud83d\udcc1 src/\n    \u2502   \u2514\u2500\u2500 \ud83d\udcc1 main/\n    \u2502       \u2514\u2500\u2500 \ud83d\udcc1 java/\n    \u2502           \u2514\u2500\u2500 \ud83d\udcc1 store/\n    \u2502               \u2514\u2500\u2500 \ud83d\udcc1 product/\n    \u2502                   \u251c\u2500\u2500 \ud83d\udcc4 ProductController.java\n    \u2502                   \u251c\u2500\u2500 \ud83d\udcc4 ProductIn.java\n    \u2502                   \u2514\u2500\u2500 \ud83d\udcc4 ProductOut.java\n    \u251c\u2500\u2500 \ud83d\udcc4 pom.xml\n    \u2514\u2500\u2500 \ud83d\udcc4 Jenkinsfile\n</code></pre> Source <p>=== \"pom.xml\"</p> <p><code>{ .yaml .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/product/refs/heads/main/pom.xml\"</code></p> <p>=== \"Jenkinsfile\"</p> <p><code>{ .jenkinsfile .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/product/refs/heads/main/Jenkinsfile\"</code></p> <p>=== \"ProductController\"</p> <p><code>{ .java title='ProductController.java' .copy .select linenums='1' } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/product/refs/heads/main/src/main/java/store/product/ProductController.java\"</code></p> <p>=== \"ProductIn\"</p> <p><code>{ .java title='ProductIn.java' .copy .select linenums='1' } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/product/refs/heads/main/src/main/java/store/product/ProductIn.java\"</code></p> <p>=== \"ProductOut\"</p> <p><code>{ .java title='ProductOut.java' .copy .select linenums='1' } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/product/refs/heads/main/src/main/java/store/product/ProductOut.java\"</code></p> <pre><code>&gt; mvn clean install\n</code></pre>"},{"location":"product/main/#implementacao-do-servico-product-service","title":"\ud83d\ude80 Implementa\u00e7\u00e3o do Servi\u00e7o (product-service)","text":"<p>Onde reside a l\u00f3gica de neg\u00f3cio, persist\u00eancia (JPA) e configura\u00e7\u00e3o de cache.</p> <pre><code>\ud83d\udcc1 api/\n\u2514\u2500\u2500 \ud83d\udcc1 product-service/\n    \u251c\u2500\u2500 \ud83d\udcc1 k8s/\n    \u2502   \u2514\u2500\u2500 \ud83d\udcc4 k8s.yaml\n    \u251c\u2500\u2500 \ud83d\udcc1 src/\n    \u2502   \u2514\u2500\u2500 \ud83d\udcc1 main/\n    \u2502       \u251c\u2500\u2500 \ud83d\udcc1 java/\n    \u2502       \u2502   \u2514\u2500\u2500 \ud83d\udcc1 store/\n    \u2502       \u2502       \u2514\u2500\u2500 \ud83d\udcc1 product/\n    \u2502       \u2502           \u251c\u2500\u2500 \ud83d\udcc4 Product.java\n    \u2502       \u2502           \u251c\u2500\u2500 \ud83d\udcc4 ProductApplication.java\n    \u2502       \u2502           \u251c\u2500\u2500 \ud83d\udcc4 ProductModel.java\n    \u2502       \u2502           \u251c\u2500\u2500 \ud83d\udcc4 ProductParser.java\n    \u2502       \u2502           \u251c\u2500\u2500 \ud83d\udcc4 ProductRepository.java\n    \u2502       \u2502           \u251c\u2500\u2500 \ud83d\udcc4 ProductResource.java\n    \u2502       \u2502           \u251c\u2500\u2500 \ud83d\udcc4 ProductService.java\n    \u2502       \u2502           \u2514\u2500\u2500 \ud83d\udcc4 RedisCacheConfig.java\n    \u2502       \u2514\u2500\u2500 \ud83d\udcc1 resources/\n    \u2502           \u251c\u2500\u2500 \ud83d\udcc4 application.yaml\n    \u2502           \u2514\u2500\u2500 \ud83d\udcc1 db/\n    \u2502               \u2514\u2500\u2500 \ud83d\udcc1 migration/\n    \u2502                   \u251c\u2500\u2500 \ud83d\udcc4 V2025.08.29.001__create_schema.sql\n    \u2502                   \u2514\u2500\u2500 \ud83d\udcc4 V2025.08.29.002__create_table_product.sql\n    \u251c\u2500\u2500 \ud83d\udcc4 pom.xml\n    \u251c\u2500\u2500 \ud83d\udcc4 Dockerfile\n    \u2514\u2500\u2500 \ud83d\udcc4 Jenkinsfile\n</code></pre> Source <p>=== \"pom.xml\"</p> <p><code>{ .yaml .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/product-service/refs/heads/main/pom.xml\"</code></p> <p>=== \"Dockerfile\"</p> <p><code>{ .dockerfile .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/product-service/refs/heads/main/DockerFile\"</code></p> <p>=== \"Jenkinsfile\"</p> <p><code>{ .jenkinsfile .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/product-service/refs/heads/main/Jenkinsfile\"</code></p> <p>=== \"k8s.yaml\"</p> <p><code>{ .yaml .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/product-service/refs/heads/main/k8s/k8s.yaml\"</code></p> <p>=== \"application.yaml\"</p> <p><code>{ .yaml .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/product-service/refs/heads/main/src/main/resources/application.yaml\"</code></p> <p>=== \"Product.java\"</p> <p><code>{ .java .copy .select linenums='1' } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/product-service/refs/heads/main/src/main/java/store/product/Product.java\"</code></p> <p>=== \"ProductApplication.java\"</p> <p><code>{ .java .copy .select linenums='1' } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/product-service/refs/heads/main/src/main/java/store/product/ProductApplication.java\"</code></p> <p>=== \"ProductModel.java\"</p> <p><code>{ .java .copy .select linenums='1' } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/product-service/refs/heads/main/src/main/java/store/product/ProductModel.java\"</code></p> <p>=== \"ProductParser.java\"</p> <p><code>{ .java .copy .select linenums='1' } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/product-service/refs/heads/main/src/main/java/store/product/ProductParser.java\"</code></p> <p>=== \"ProductRepository.java\"</p> <p><code>{ .java .copy .select linenums='1' } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/product-service/refs/heads/main/src/main/java/store/product/ProductRepository.java\"</code></p> <p>=== \"ProductResource.java\"</p> <p><code>{ .java .copy .select linenums='1' } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/product-service/refs/heads/main/src/main/java/store/product/ProductResource.java\"</code></p> <p>=== \"ProductService.java\"</p> <p><code>{ .java .copy .select linenums='1' } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/product-service/refs/heads/main/src/main/java/store/product/ProductService.java\"</code></p> <p>=== \"RedisCacheConfig.java\"</p> <p><code>{ .java .copy .select linenums='1' } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/product-service/refs/heads/main/src/main/java/store/product/RedisCacheConfig.java\"</code></p> <p>=== \"V2025.08.29.001__create_schema.sql\"</p> <p><code>{ .sql .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/product-service/refs/heads/main/src/main/resources/db/migration/V2025.08.29.001__create_schema.sql\"</code></p> <p>=== \"V2025.08.29.002__create_table_product.sql\"</p> <p><code>{ .sql .copy .select linenums=\"1\" } \u00a0 \u00a0 \u00a0 \u00a0 --8&lt;-- \"https://raw.githubusercontent.com/Lagoass/product-service/refs/heads/main/src/main/resources/db/migration/V2025.08.29.002__create_table_product.sql\"</code></p> <pre><code>&gt; mvn clean package spring-boot:run\n</code></pre>"}]}